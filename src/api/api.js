const API_BASE = 'https://app.tablecrm.com/api/v1';

const normalize = (data) => {
  if (!data) return [];
  if (Array.isArray(data)) return data;
  if (Array.isArray(data.results)) return data.results;
  if (Array.isArray(data.result)) return data.result; // —Å–µ—Ä–≤–µ—Ä –æ—Ç–¥–∞—ë—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫
  return [];
};

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ç–æ–∫–µ–Ω–æ–º
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö (–∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ)
 */
const fetchData = async (endpoint, token) => {
  try {
    const url = `${API_BASE}/${endpoint}/?token=${token}`;
    console.log("üì° –ó–∞–ø—Ä–æ—Å:", url);

    const res = await fetch(url, { cache: "no-store" });

    if (!res.ok) {
      throw new Error(`HTTP ${res.status}: ${res.statusText}`);
    }

    const data = await res.json();
    console.log("üì® –û—Ç–≤–µ—Ç:", endpoint, data);

    return normalize(data);
  } catch (err) {
    console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ ${endpoint}:`, err);
    return [];
  }
};

export const searchClient = async (phone, token) => {
  try {
    const url = `${API_BASE}/contragents/?phone=${phone}&token=${token}`;
    console.log("üì° –ó–∞–ø—Ä–æ—Å:", url);

    const res = await fetch(url, { cache: "no-store" });
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const data = await res.json();

    console.log("üì® –û—Ç–≤–µ—Ç: contragents", data);
    return data;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞:", err);
    return { result: [] };
  }
};

export const getOrganizations = (token) => fetchData("organizations", token);
export const getWarehouses = (token) => fetchData("warehouses", token);
export const getBills = (token) => fetchData("payboxes", token);
export const getPriceTypes = (token) => fetchData("price_types", token);
export const getNomenclature = (token) => fetchData("nomenclature", token);

export const createSale = async (payload, token) => {
  try {
    const url = `${API_BASE}/docs_sales/?token=${token}`;
    console.log("üì° POST:", url, payload);

    const res = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    });

    if (!res.ok) {
      throw new Error(`HTTP ${res.status}: ${res.statusText}`);
    }

    return await res.json();
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏:", err);
    throw err;
  }
};
